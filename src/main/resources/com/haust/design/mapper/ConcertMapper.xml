<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haust.design.mapper.ConcertMapper">
    
    
    <resultMap id="toConcertDto" type="com.haust.design.dto.ConcertDto">
        <result property="concertId" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="location"/>
        <result property="detailedLocation" column="detailed_location"/>
        <result property="startTime" column="start_time"/>
        <result property="category" column="category"/>
        <result property="performers" column="performers"/>
        <result property="price" column="price"/>
        <result property="stock" column="stock"/>
        <result property="coverImageUrl" column="cover_image_url"/>
        <result property="addressId" column="addressId"/>
        <result property="categoryId" column="categoryId"/>
    </resultMap>




    <select id="exist" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM concert
        WHERE name=#{name}
    </select>

    <insert id="insert" parameterType="concert" keyProperty="id" useGeneratedKeys="true">
        INSERT concert (name, address_id, detailed_location, start_time, category_id, performers, price, stock, cover_image_url)
        VALUES (#{name},#{addressId},#{detailedLocation},#{startTime},#{categoryId},#{performers},#{price},#{stock},#{coverImageUrl})
    </insert>

    <select id="selectAll" resultType="com.haust.design.dto.ConcertDto" resultMap="toConcertDto">
        SELECT
            c.id,c.name,c.detailed_location,c.start_time,c.performers,c.price,c.stock,c.cover_image_url,
            a.location,cc.category
        FROM concert as c
        LEFT JOIN address as a ON  c.address_id = a.id
        LEFT JOIN concert_category as cc ON c.category_id = cc.id
    </select>

    <select id="getProjectDetailsByConcertId" resultType="java.lang.String">
        SELECT project_details
        FROM concert_detail
        WHERE concert_id = #{concertId}
    </select>

    <select id="getTicketInfoByConcertId" resultType="java.lang.String">
        SELECT ticket_info
        FROM concert_detail
        WHERE concert_id = #{concertId}
    </select>

    <select id="getViewInfoByConcertId" resultType="java.lang.String">
        SELECT viewing_info
        FROM concert_detail
        WHERE concert_id = #{concertId}
    </select>

    <select id="searchConcertByName" resultType="com.haust.design.entity.Concert">
        SELECT *
        FROM concert
        WHERE name LIKE CONCAT('%', #{concertName}, '%')
    </select>

    <select id="searchConcertByPerformer" resultType="com.haust.design.entity.Concert">
        SELECT *
        FROM concert
        WHERE performers LIKE CONCAT('%', #{performer}, '%')
    </select>

    <select id="searchConcertByAddressAndCategory" resultType="com.haust.design.entity.Concert">
        SELECT *
        FROM concert
        WHERE 1=1
        <if test="addressId != null and addressId != ''">
            AND address_id = #{addressId}
        </if>
        <if test="categoryId != null">
            AND category_id = #{categoryId}
        </if>
    </select>


    <update id="updateConcertByConcertId">
        UPDATE concert
        SET name = #{newConcert.name},address_id = #{newConcert.addressId},detailed_location = #{newConcert.detailedLocation},
            start_time = #{newConcert.startTime},category_id = #{newConcert.categoryId},performers = #{newConcert.performers},
            price = #{newConcert.price},stock = #{newConcert.stock},cover_image_url = #{newConcert.coverImageUrl}
        WHERE id = #{concertId}
    </update>


    <delete id="deleteConcert">
        DELETE FROM concert
        WHERE id = #{concertId}
    </delete>


    <select id="getConcertById" resultType="com.haust.design.dto.ConcertDto" resultMap="toConcertDto">
        SELECT
            c.id,c.name,c.detailed_location,c.start_time,c.performers,c.price,c.stock,c.cover_image_url,
            a.location,a.id as addressId, cc.category,cc.id as categoryId
        FROM concert as c
                 LEFT JOIN address as a ON  c.address_id = a.id
                 LEFT JOIN concert_category as cc ON c.category_id = cc.id
        WHERE c.id=#{concertId}
    </select>

    <select id="searchConcertByConditions" resultType="com.haust.design.dto.ConcertDto" resultMap="toConcertDto">
        SELECT
            c.id,c.name,c.detailed_location,c.start_time,c.performers,c.price,c.stock,c.cover_image_url,
            a.location,cc.category
        FROM concert as c
                 LEFT JOIN address as a ON  c.address_id = a.id
                 LEFT JOIN concert_category as cc ON c.category_id = cc.id
        WHERE 1=1
        <if test="name != null and name != ''">
            AND c.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="addressId != null and addressId != ''">
            AND a.id = #{addressId}
        </if>
        <if test="categoryId != null and categoryId != ''">
            AND cc.id = #{categoryId}
        </if>
        <if test="performers != null and performers != ''">
            AND c.performers LIKE CONCAT('%', #{performers}, '%')
        </if>
    </select>


</mapper>